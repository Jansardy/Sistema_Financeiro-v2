unit MonolitoFinanceiro.Model.Entidades.Caixa.Resumo;

interface

type
  TModelResumooCaixa = class
    private
    FTotalSaidas: Currency;
    FTotalEntradas: Currency;
    FSaldoInicial: Currency;
    procedure SetSaldoInicial(const Value: Currency);
    procedure SetTotalEntradas(const Value: Currency);
    procedure SetTotalSaidas(const Value: Currency);
    public
      property SaldoInicial : Currency read FSaldoInicial write SetSaldoInicial;
      property TotalEntradas : Currency read FTotalEntradas write SetTotalEntradas;
      property TotalSaidas : Currency read FTotalSaidas write SetTotalSaidas;
      function SaldoParcial : Currency;
      function SaldoFinal : Currency;

  end;
implementation

{ TModelResumooCaixa }


function TModelResumooCaixa.SaldoFinal: Currency;
begin
  Result := FSaldoInicial + SaldoInicial;
end;

function TModelResumooCaixa.SaldoParcial: Currency;
begin
  Result := FTotalEntradas - FTotalSaidas;
end;

procedure TModelResumooCaixa.SetSaldoInicial(const Value: Currency);
begin
  FSaldoInicial := Value;
end;

procedure TModelResumooCaixa.SetTotalEntradas(const Value: Currency);
begin
  FTotalEntradas := Value;
end;

procedure TModelResumooCaixa.SetTotalSaidas(const Value: Currency);
begin
  FTotalSaidas := Value;
end;


end.
